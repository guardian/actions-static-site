// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`static site INFRA should match snapshot 1`] = `
Object {
  "Metadata": Object {
    "gu:cdk:constructs": Array [
      "GuDistributionBucketParameter",
      "GuAnghammaradTopicParameter",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuEc2App",
      "GuCertificate",
      "GuInstanceRole",
      "GuSSMRunCommandPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuAutoScalingGroup",
      "GuWazuhAccess",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuAlb5xxPercentageAlarm",
      "GuUnhealthyInstancesAlarm",
      "GuCname",
    ],
    "gu:cdk:version": "48.5.1",
  },
  "Outputs": Object {
    "LoadBalancerAppDnsName": Object {
      "Description": "DNS entry for LoadBalancerApp",
      "Value": Object {
        "Fn::GetAtt": Array [
          "LoadBalancerApp94515990",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "AMIApp": Object {
      "Description": "Amazon Machine Image ID for the app app. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "AnghammaradSnsArn": Object {
      "Default": "/account/services/anghammarad.topic.arn",
      "Description": "SSM parameter containing the ARN of the Anghammarad SNS topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "appPrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "appPublicSubnets": Object {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "clientIDParameter": Object {
      "Default": "/INFRA/stack/app/googleClientID",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupAppASG9C0442BD": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupAppLaunchConfig4CF0B189",
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "app",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "LoggingStreamName",
            },
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "static-site-INFRA/AutoScalingGroupApp",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "INFRA",
          },
          Object {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "app.service",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroupAppC3FDB286",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "appPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupAppInstanceProfileC361EA9B": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleApp706F3E68",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupAppLaunchConfig4CF0B189": Object {
      "DependsOn": Array [
        "InstanceRoleAppDefaultPolicy7C798473",
        "InstanceRoleApp706F3E68",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupAppInstanceProfileC361EA9B",
        },
        "ImageId": Object {
          "Ref": "AMIApp",
        },
        "InstanceType": "t4g.nano",
        "MetadataOptions": Object {
          "HttpTokens": "required",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "GuHttpsEgressSecurityGroupApp026DFC83",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash -ev
cat << EOF > /etc/systemd/system/app.service
[Unit]
Description=Static Site service

[Service]
Environment=\\"PROD_BUCKET=",
                Object {
                  "Ref": "staticD8C87B36",
                },
                "\\"
Environment=\\"CODE_BUCKET=",
                Object {
                  "Ref": "codestaticB41DF3D7",
                },
                "\\"
Environment=\\"VALID_CODE_DOMAIN_SUFFIXES=.code.dev-gutools.co.uk\\"
Environment=\\"PORT=9000\\"
ExecStart=/app

[Install]
WantedBy=multi-user.target
EOF

aws s3 cp s3://",
                Object {
                  "Ref": "DistributionBucketName",
                },
                "/stack/INFRA/app/static-site-service /app
chmod +x /app
systemctl start app
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateAppCEE540C3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": "example.devx.gutools.co.uk",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Name",
            "Value": "static-site-INFRA/CertificateApp",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DNS": Object {
      "Properties": Object {
        "Name": "example.devx.gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerApp94515990",
              "DNSName",
            ],
          },
        ],
        "Stage": "INFRA",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleApp706F3E68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyApp3932E321": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/stack/INFRA/app/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyApp3932E321",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleApp706F3E68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupApp026DFC83": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupAppfromstaticsiteINFRALoadBalancerAppSecurityGroup35E6288E90003B3B2611": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupApp026DFC83",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAppSecurityGroup25B85B40",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupAppfromstaticsiteINFRAldpaccess9458C77F900030A85163": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupApp026DFC83",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "ldpaccess567AC006",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleApp706F3E68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "High5xxPercentageAlarmAppBEBB1F03": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":",
                Object {
                  "Ref": "AnghammaradSnsArn",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "app exceeded 1% error rate",
        "AlarmName": "High 5XX error % from app in INFRA",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 60,
        "Metrics": Array [
          Object {
            "Expression": "100*(m1+m2)/m3",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for app (load balancer and instances combined)",
          },
          Object {
            "Id": "m1",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerApp94515990",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m2",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerApp94515990",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m3",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerApp94515990",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "RequestCount",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "InstanceRoleApp706F3E68": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceRoleAppDefaultPolicy7C798473": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "staticD8C87B36",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "staticD8C87B36",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "codestaticB41DF3D7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "codestaticB41DF3D7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceRoleAppDefaultPolicy7C798473",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleApp706F3E68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ListenerApp55D0EA9B": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateAppCEE540C3",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "AuthenticateOidcConfig": Object {
              "AuthenticationRequestExtraParams": Object {
                "hd": "guardian.co.uk",
              },
              "AuthorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
              "ClientId": Object {
                "Ref": "clientIDParameter",
              },
              "ClientSecret": "{{resolve:secretsmanager:/INFRA/stack/app/clientSecret:SecretString:::}}",
              "Issuer": "https://accounts.google.com",
              "Scope": "openid email",
              "TokenEndpoint": "https://oauth2.googleapis.com/token",
              "UserInfoEndpoint": "https://openidconnect.googleapis.com/v1/userinfo",
            },
            "Order": 1,
            "Type": "authenticate-oidc",
          },
          Object {
            "Order": 2,
            "TargetGroupArn": Object {
              "Ref": "TargetGroupAppC3FDB286",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerApp94515990",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ListenerAppPRoutRule52A1A63F": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroupAppC3FDB286",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "path-pattern",
            "PathPatternConfig": Object {
              "Values": Array [
                "**/_prout",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "ListenerApp55D0EA9B",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "LoadBalancerApp94515990": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerAppSecurityGroup25B85B40",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "ldpaccess567AC006",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "appPublicSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerAppSecurityGroup25B85B40": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB staticsiteINFRALoadBalancerAppCB3B8001",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerAppSecurityGrouptostaticsiteINFRAGuHttpsEgressSecurityGroupApp9D35DDCD9000D48D79FC": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupApp026DFC83",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAppSecurityGroup25B85B40",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadApp8C5D582A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/INFRA/stack/app",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/INFRA/stack/app/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleApp706F3E68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMRunCommandPolicy244E1613": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleApp706F3E68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupAppC3FDB286": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "app",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmAppBFB0C287": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":",
                Object {
                  "Ref": "AnghammaradSnsArn",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "app's instances have failed healthchecks several times over the last 1 hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check app's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": "Unhealthy instances for app in INFRA",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 30,
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerApp55D0EA9B",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerApp55D0EA9B",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerApp55D0EA9B",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::GetAtt": Array [
                "TargetGroupAppC3FDB286",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 60,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "codestaticB41DF3D7": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "WebsiteConfiguration": Object {
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "codestaticPolicy56B5E7C1": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "codestaticB41DF3D7",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::000000000016:root",
                      ],
                    ],
                  },
                  "arn:aws:iam::000000000016:role/galaxies-data-refresher-lambda-role-CODE",
                ],
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "codestaticB41DF3D7",
                        "Arn",
                      ],
                    },
                    "/galaxies.code.dev-gutools.co.uk/data/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Condition": Object {
                "StringLike": Object {
                  "s3:prefix": Array [
                    "galaxies.code.dev-gutools.co.uk/data/*",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::000000000016:root",
                      ],
                    ],
                  },
                  "arn:aws:iam::000000000016:role/galaxies-data-refresher-lambda-role-CODE",
                ],
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "codestaticB41DF3D7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "codestaticsitebucketCDD8A031": Object {
      "Properties": Object {
        "Description": "Bucket for CODE static sites.",
        "Name": "/INFRA/stack/app/codeBucket",
        "Tags": Object {
          "Stack": "stack",
          "Stage": "INFRA",
          "gu:cdk:version": "48.5.1",
          "gu:repo": "guardian/actions-static-site",
        },
        "Type": "String",
        "Value": Object {
          "Ref": "codestaticB41DF3D7",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ldpaccess567AC006": Object {
      "Properties": Object {
        "GroupDescription": "static-site-INFRA/ldp-access",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "staticD8C87B36": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "48.5.1",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/actions-static-site",
          },
          Object {
            "Key": "Stack",
            "Value": "stack",
          },
          Object {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "WebsiteConfiguration": Object {
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "staticPolicy36384B58": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "staticD8C87B36",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "arn:aws:iam::000000000016:role/galaxies-data-refresher-lambda-role-PROD",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "staticD8C87B36",
                        "Arn",
                      ],
                    },
                    "/galaxies.gutools.co.uk/data/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Condition": Object {
                "StringLike": Object {
                  "s3:prefix": Array [
                    "galaxies.gutools.co.uk/data/*",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "arn:aws:iam::000000000016:role/galaxies-data-refresher-lambda-role-PROD",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "staticD8C87B36",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "staticsitealbdnsname7E2D6E36": Object {
      "Properties": Object {
        "Description": "ALB DNS name for static sites.",
        "Name": "/INFRA/stack/app/loadBalancerDnsName",
        "Tags": Object {
          "Stack": "stack",
          "Stage": "INFRA",
          "gu:cdk:version": "48.5.1",
          "gu:repo": "guardian/actions-static-site",
        },
        "Type": "String",
        "Value": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerApp94515990",
            "DNSName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "staticsitebucket16DB0AA4": Object {
      "Properties": Object {
        "Description": "Bucket for static sites.",
        "Name": "/INFRA/stack/app/bucket",
        "Tags": Object {
          "Stack": "stack",
          "Stage": "INFRA",
          "gu:cdk:version": "48.5.1",
          "gu:repo": "guardian/actions-static-site",
        },
        "Type": "String",
        "Value": Object {
          "Ref": "staticD8C87B36",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "staticsitelisenerarnA82E77B3": Object {
      "Properties": Object {
        "Description": "Listener ARN for static sites.",
        "Name": "/INFRA/stack/app/listenerArn",
        "Tags": Object {
          "Stack": "stack",
          "Stage": "INFRA",
          "gu:cdk:version": "48.5.1",
          "gu:repo": "guardian/actions-static-site",
        },
        "Type": "String",
        "Value": Object {
          "Ref": "ListenerApp55D0EA9B",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
}
`;
