{
 "Metadata": {
  "gu:cdk:constructs": [
   "GuDistributionBucketParameter",
   "GuAnghammaradTopicParameter",
   "GuVpcParameter",
   "GuSubnetListParameter",
   "GuSubnetListParameter",
   "GuEc2App",
   "GuCertificate",
   "GuInstanceRole",
   "GuSSMRunCommandPolicy",
   "GuDescribeEC2Policy",
   "GuLoggingStreamNameParameter",
   "GuLogShippingPolicy",
   "GuGetDistributablePolicy",
   "GuParameterStoreReadPolicy",
   "GuAmiParameter",
   "GuHttpsEgressSecurityGroup",
   "GuAutoScalingGroup",
   "GuWazuhAccess",
   "GuApplicationLoadBalancer",
   "GuApplicationTargetGroup",
   "GuHttpsApplicationListener",
   "GuAlb5xxPercentageAlarm",
   "GuUnhealthyInstancesAlarm",
   "GuCname"
  ],
  "gu:cdk:version": "48.4.1"
 },
 "Resources": {
  "staticD8C87B36": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ],
    "WebsiteConfiguration": {
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "CertificateStaticsiteinfra96FB258D": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "static-site.gutools.co.uk",
    "Tags": [
     {
      "Key": "App",
      "Value": "static-site-infra"
     },
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Name",
      "Value": "Static-Site-INFRA/CertificateStaticsiteinfra"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ],
    "ValidationMethod": "DNS"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "InstanceRoleStaticsiteinfra4F680EB5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Tags": [
     {
      "Key": "App",
      "Value": "static-site-infra"
     },
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ]
   }
  },
  "InstanceRoleStaticsiteinfraDefaultPolicy2FFC3831": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "staticD8C87B36",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "staticD8C87B36",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstanceRoleStaticsiteinfraDefaultPolicy2FFC3831",
    "Roles": [
     {
      "Ref": "InstanceRoleStaticsiteinfra4F680EB5"
     }
    ]
   }
  },
  "SSMRunCommandPolicy244E1613": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2messages:AcknowledgeMessage",
        "ec2messages:DeleteMessage",
        "ec2messages:FailMessage",
        "ec2messages:GetEndpoint",
        "ec2messages:GetMessages",
        "ec2messages:SendReply",
        "ssm:UpdateInstanceInformation",
        "ssm:ListInstanceAssociations",
        "ssm:DescribeInstanceProperties",
        "ssm:DescribeDocumentParameters",
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ssm-run-command-policy",
    "Roles": [
     {
      "Ref": "InstanceRoleStaticsiteinfra4F680EB5"
     }
    ]
   }
  },
  "DescribeEC2PolicyFF5F9295": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeAutoScalingGroups",
        "ec2:DescribeTags",
        "ec2:DescribeInstances"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "describe-ec2-policy",
    "Roles": [
     {
      "Ref": "InstanceRoleStaticsiteinfra4F680EB5"
     }
    ]
   }
  },
  "GuLogShippingPolicy981BFE5A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kinesis:Describe*",
        "kinesis:Put*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:kinesis:eu-west-1:",
          {
           "Ref": "AWS::AccountId"
          },
          ":stream/",
          {
           "Ref": "LoggingStreamName"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GuLogShippingPolicy981BFE5A",
    "Roles": [
     {
      "Ref": "InstanceRoleStaticsiteinfra4F680EB5"
     }
    ]
   }
  },
  "GetDistributablePolicyStaticsiteinfra9CEB8175": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "DistributionBucketName"
          },
          "/deploy/INFRA/static-site-infra/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetDistributablePolicyStaticsiteinfra9CEB8175",
    "Roles": [
     {
      "Ref": "InstanceRoleStaticsiteinfra4F680EB5"
     }
    ]
   }
  },
  "ParameterStoreReadStaticsiteinfraE11EBD41": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ssm:GetParametersByPath",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:eu-west-1:",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/INFRA/deploy/static-site-infra"
         ]
        ]
       }
      },
      {
       "Action": [
        "ssm:GetParameters",
        "ssm:GetParameter"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:eu-west-1:",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/INFRA/deploy/static-site-infra/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "parameter-store-read-policy",
    "Roles": [
     {
      "Ref": "InstanceRoleStaticsiteinfra4F680EB5"
     }
    ]
   }
  },
  "GuHttpsEgressSecurityGroupStaticsiteinfraCB636C93": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow all outbound HTTPS traffic",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound HTTPS traffic",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "static-site-infra"
     },
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ],
    "VpcId": {
     "Ref": "VpcId"
    }
   }
  },
  "GuHttpsEgressSecurityGroupStaticsiteinfrafromStaticSiteINFRALoadBalancerStaticsiteinfraSecurityGroup603E3A0F90008B362B05": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 9000,
    "GroupId": {
     "Fn::GetAtt": [
      "GuHttpsEgressSecurityGroupStaticsiteinfraCB636C93",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "LoadBalancerStaticsiteinfraSecurityGroupDE5922F4",
      "GroupId"
     ]
    },
    "ToPort": 9000
   }
  },
  "AutoScalingGroupStaticsiteinfraInstanceProfileF0018DB3": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "InstanceRoleStaticsiteinfra4F680EB5"
     }
    ]
   }
  },
  "AutoScalingGroupStaticsiteinfraLaunchConfig402CF24B": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": {
     "Ref": "AMIStaticsiteinfra"
    },
    "InstanceType": "t4g.nano",
    "IamInstanceProfile": {
     "Ref": "AutoScalingGroupStaticsiteinfraInstanceProfileF0018DB3"
    },
    "MetadataOptions": {
     "HttpTokens": "required"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "GuHttpsEgressSecurityGroupStaticsiteinfraCB636C93",
       "GroupId"
      ]
     },
     {
      "Fn::GetAtt": [
       "WazuhSecurityGroup",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash -ev\ncat << EOF > /etc/systemd/system/static-site-infra.service\n[Unit]\nDescription=CDK Metadata\n\n[Service]\nEnvironment=\"PORT=9000\"\nExecStart=/static-site-infra\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\naws s3 cp s3://",
        {
         "Ref": "DistributionBucketName"
        },
        "/deploy/INFRA/static-site-infra/static-site-infra /static-site-infra\nchmod +x /static-site-infra\nsystemctl start static-site-infra\n"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "InstanceRoleStaticsiteinfraDefaultPolicy2FFC3831",
    "InstanceRoleStaticsiteinfra4F680EB5"
   ]
  },
  "AutoScalingGroupStaticsiteinfraASG1581A017": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "MaxSize": "2",
    "MinSize": "1",
    "HealthCheckGracePeriod": 120,
    "HealthCheckType": "ELB",
    "LaunchConfigurationName": {
     "Ref": "AutoScalingGroupStaticsiteinfraLaunchConfig402CF24B"
    },
    "Tags": [
     {
      "Key": "App",
      "PropagateAtLaunch": true,
      "Value": "static-site-infra"
     },
     {
      "Key": "gu:cdk:pattern-name",
      "PropagateAtLaunch": true,
      "Value": "GuEc2App"
     },
     {
      "Key": "gu:cdk:version",
      "PropagateAtLaunch": true,
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "PropagateAtLaunch": true,
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "LogKinesisStreamName",
      "PropagateAtLaunch": true,
      "Value": {
       "Ref": "LoggingStreamName"
      }
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "Static-Site-INFRA/AutoScalingGroupStaticsiteinfra"
     },
     {
      "Key": "Stack",
      "PropagateAtLaunch": true,
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "PropagateAtLaunch": true,
      "Value": "INFRA"
     },
     {
      "Key": "SystemdUnit",
      "PropagateAtLaunch": true,
      "Value": "static-site-infra.service"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "TargetGroupStaticsiteinfra28811331"
     }
    ],
    "VPCZoneIdentifier": {
     "Ref": "staticsiteinfraPrivateSubnets"
    }
   }
  },
  "WazuhSecurityGroup": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Wazuh event logging",
      "FromPort": 1514,
      "IpProtocol": "tcp",
      "ToPort": 1514
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Wazuh agent registration",
      "FromPort": 1515,
      "IpProtocol": "tcp",
      "ToPort": 1515
     }
    ],
    "Tags": [
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ],
    "VpcId": {
     "Ref": "VpcId"
    }
   }
  },
  "LoadBalancerStaticsiteinfraD54FBC6F": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "true"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "LoadBalancerStaticsiteinfraSecurityGroupDE5922F4",
       "GroupId"
      ]
     }
    ],
    "Subnets": {
     "Ref": "staticsiteinfraPublicSubnets"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "static-site-infra"
     },
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ],
    "Type": "application"
   }
  },
  "LoadBalancerStaticsiteinfraSecurityGroupDE5922F4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB StaticSiteINFRALoadBalancerStaticsiteinfra606A4496",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "static-site-infra"
     },
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ],
    "VpcId": {
     "Ref": "VpcId"
    }
   }
  },
  "LoadBalancerStaticsiteinfraSecurityGrouptoStaticSiteINFRAGuHttpsEgressSecurityGroupStaticsiteinfraE4E95AE39000F3F53D39": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "LoadBalancerStaticsiteinfraSecurityGroupDE5922F4",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "GuHttpsEgressSecurityGroupStaticsiteinfraCB636C93",
      "GroupId"
     ]
    },
    "FromPort": 9000,
    "ToPort": 9000
   }
  },
  "TargetGroupStaticsiteinfra28811331": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 10,
    "HealthCheckPath": "/healthcheck",
    "HealthCheckProtocol": "HTTP",
    "HealthCheckTimeoutSeconds": 5,
    "HealthyThresholdCount": 5,
    "Port": 9000,
    "Protocol": "HTTP",
    "Tags": [
     {
      "Key": "App",
      "Value": "static-site-infra"
     },
     {
      "Key": "gu:cdk:version",
      "Value": "48.4.1"
     },
     {
      "Key": "gu:repo",
      "Value": "guardian/actions-static-site"
     },
     {
      "Key": "Stack",
      "Value": "deploy"
     },
     {
      "Key": "Stage",
      "Value": "INFRA"
     }
    ],
    "TargetGroupAttributes": [
     {
      "Key": "deregistration_delay.timeout_seconds",
      "Value": "30"
     },
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "UnhealthyThresholdCount": 2,
    "VpcId": {
     "Ref": "VpcId"
    }
   }
  },
  "ListenerStaticsiteinfraF9A47E6B": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "AuthenticateOidcConfig": {
       "AuthenticationRequestExtraParams": {
        "hd": "guardian.co.uk"
       },
       "AuthorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
       "ClientId": {
        "Ref": "clientIDParameter"
       },
       "ClientSecret": "{{resolve:secretsmanager:INFRA/deploy/static-site-infra/googleClientSecret:SecretString:::}}",
       "Issuer": "https://accounts.google.com",
       "Scope": "openid email",
       "TokenEndpoint": "https://oauth2.googleapis.com/token",
       "UserInfoEndpoint": "https://openidconnect.googleapis.com/v1/userinfo"
      },
      "Order": 1,
      "Type": "authenticate-oidc"
     },
     {
      "Order": 2,
      "TargetGroupArn": {
       "Ref": "TargetGroupStaticsiteinfra28811331"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "LoadBalancerStaticsiteinfraD54FBC6F"
    },
    "Certificates": [
     {
      "CertificateArn": {
       "Ref": "CertificateStaticsiteinfra96FB258D"
      }
     }
    ],
    "Port": 443,
    "Protocol": "HTTPS"
   }
  },
  "High5xxPercentageAlarmStaticsiteinfra0D5AE8B4": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": 60,
    "ActionsEnabled": true,
    "AlarmActions": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:sns:eu-west-1:",
        {
         "Ref": "AWS::AccountId"
        },
        ":",
        {
         "Ref": "AnghammaradSnsArn"
        }
       ]
      ]
     }
    ],
    "AlarmDescription": "static-site-infra exceeded 1% error rate",
    "AlarmName": "High 5XX error % from static-site-infra in INFRA",
    "Metrics": [
     {
      "Expression": "100*(m1+m2)/m3",
      "Id": "expr_1",
      "Label": "% of 5XX responses served for static-site-infra (load balancer and instances combined)"
     },
     {
      "Id": "m1",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "LoadBalancer",
          "Value": {
           "Fn::GetAtt": [
            "LoadBalancerStaticsiteinfraD54FBC6F",
            "LoadBalancerFullName"
           ]
          }
         }
        ],
        "MetricName": "HTTPCode_ELB_5XX_Count",
        "Namespace": "AWS/ApplicationELB"
       },
       "Period": 60,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "m2",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "LoadBalancer",
          "Value": {
           "Fn::GetAtt": [
            "LoadBalancerStaticsiteinfraD54FBC6F",
            "LoadBalancerFullName"
           ]
          }
         }
        ],
        "MetricName": "HTTPCode_Target_5XX_Count",
        "Namespace": "AWS/ApplicationELB"
       },
       "Period": 60,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "m3",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "LoadBalancer",
          "Value": {
           "Fn::GetAtt": [
            "LoadBalancerStaticsiteinfraD54FBC6F",
            "LoadBalancerFullName"
           ]
          }
         }
        ],
        "MetricName": "RequestCount",
        "Namespace": "AWS/ApplicationELB"
       },
       "Period": 60,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   }
  },
  "UnhealthyInstancesAlarmStaticsiteinfra5A6217E8": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 60,
    "ActionsEnabled": true,
    "AlarmActions": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:sns:eu-west-1:",
        {
         "Ref": "AWS::AccountId"
        },
        ":",
        {
         "Ref": "AnghammaradSnsArn"
        }
       ]
      ]
     }
    ],
    "AlarmDescription": "static-site-infra's instances have failed healthchecks several times over the last 1 hour.\n      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,\n      scaling or handling traffic spikes.\n\n      Check static-site-infra's application logs or ssh onto an unhealthy instance in order to debug these problems.",
    "AlarmName": "Unhealthy instances for static-site-infra in INFRA",
    "DatapointsToAlarm": 30,
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "/",
             {
              "Ref": "ListenerStaticsiteinfraF9A47E6B"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "/",
             {
              "Ref": "ListenerStaticsiteinfraF9A47E6B"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "/",
             {
              "Ref": "ListenerStaticsiteinfraF9A47E6B"
             }
            ]
           }
          ]
         }
        ]
       ]
      }
     },
     {
      "Name": "TargetGroup",
      "Value": {
       "Fn::GetAtt": [
        "TargetGroupStaticsiteinfra28811331",
        "TargetGroupFullName"
       ]
      }
     }
    ],
    "MetricName": "UnHealthyHostCount",
    "Namespace": "AWS/ApplicationELB",
    "Period": 60,
    "Statistic": "Maximum",
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   }
  },
  "DNS": {
   "Type": "Guardian::DNS::RecordSet",
   "Properties": {
    "Name": "static-site.gutools.co.uk",
    "ResourceRecords": [
     {
      "Fn::GetAtt": [
       "LoadBalancerStaticsiteinfraD54FBC6F",
       "DNSName"
      ]
     }
    ],
    "RecordType": "CNAME",
    "TTL": 3600,
    "Stage": "INFRA"
   }
  }
 },
 "Parameters": {
  "DistributionBucketName": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/account/services/artifact.bucket",
   "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts"
  },
  "AnghammaradSnsArn": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/account/services/anghammarad.topic.arn",
   "Description": "SSM parameter containing the ARN of the Anghammarad SNS topic"
  },
  "VpcId": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
   "Default": "/account/vpc/primary/id",
   "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC."
  },
  "staticsiteinfraPrivateSubnets": {
   "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
   "Default": "/account/vpc/primary/subnets/private",
   "Description": "A list of private subnets"
  },
  "staticsiteinfraPublicSubnets": {
   "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
   "Default": "/account/vpc/primary/subnets/public",
   "Description": "A list of public subnets"
  },
  "LoggingStreamName": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/account/services/logging.stream.name",
   "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream"
  },
  "AMIStaticsiteinfra": {
   "Type": "AWS::EC2::Image::Id",
   "Description": "Amazon Machine Image ID for the app static-site-infra. Use this in conjunction with AMIgo to keep AMIs up to date."
  },
  "clientIDParameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/INFRA/deploy/static-site-infra/googleClientID"
  }
 },
 "Outputs": {
  "LoadBalancerStaticsiteinfraDnsName": {
   "Description": "DNS entry for LoadBalancerStaticsiteinfra",
   "Value": {
    "Fn::GetAtt": [
     "LoadBalancerStaticsiteinfraD54FBC6F",
     "DNSName"
    ]
   }
  }
 }
}